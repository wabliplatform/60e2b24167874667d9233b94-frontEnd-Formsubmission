
[{
    "methodType":"POST",
    "methodName":"createquest",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Quest"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiQuestApi = new TempApi.QuestApi();",
    "importModelParameter":["let quest = new TempApi.Quest();"],
    "modelNames":["quest"],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiQuestApi.createquest( quest, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"DELETE",
    "methodName":"deletequest",
    "returnType":{

      "primitive":"true",
      "type":"null"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiQuestApi = new TempApi.QuestApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiQuestApi.deletequest( questId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully.');/**nextFunction*/}});"
  },{
    "methodType":"GETALL",
    "methodName":"getAllquest",
    "returnType":{
      "primitive":false,
      "jsType":"Array",
      "modelName":"[Quest]"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiQuestApi = new TempApi.QuestApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiQuestApi.getAllquest((error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"GETBYPARAMS",
    "methodName":"getByParamsquest",
    "returnType":{
      "primitive":false,
      "jsType":"Array",
      "modelName":"[Quest]"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiQuestApi = new TempApi.QuestApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiQuestApi.getByParamsquest( filter, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"GET",
    "methodName":"getquest",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Quest"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiQuestApi = new TempApi.QuestApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiQuestApi.getquest( questId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"PUT",
    "methodName":"updatequest",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Quest"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiQuestApi = new TempApi.QuestApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiQuestApi.updatequest( questId, opts, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  }
]
